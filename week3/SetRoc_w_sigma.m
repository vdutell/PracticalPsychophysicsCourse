function [dif, dprime,expect,sigma,z_score]= set_roc_w_sigma(params, stim,data, fixed);%Used by lsqnonlin to getthe difference between expected and observed% %The first nresp-1 parameters are the criteria values. Then remaining%parameters depend on the particular model specified in first two elements%of the 'fixed' argument. %fixed(1)specifies how d' is calculated (separate params transducer fn)%fixed(2)specifies the ROC slope (like multiplicative noise)%fixed(3)specifies at which point of ROC is d' defined (see Expected)[nresp nstim] = size(data) ;nparams=length(params);transd  = fixed(1);                 %calculate d' based on this parameterif transd==6, dprime=[0 params(nresp:nresp+nstim-2)]; %indep d' Ns-1 paramselseif transd==6.1,n2=nresp+(nstim-1)/2; %for symmetric task like Vernier    dprime=[params(nresp:n2-1) 0 params(n2:nresp+nstim-2)];%indep d' elseif transd==7, dprime=cumsum([0 params(nresp:nresp+nstim-2)]);%float d' differenceselse    %Fit it with a transducer function that depends on threshold    if transd>0, n=transd;    %fixed exponent (float only threshold)    else n=params(nresp+1);   %also float exponent (for transd=-1)    end    c=stim/params(nresp);  %contrast of each level in threshold units%    dprime=c.^n.*(c<=1)+((c-1)*n+1).*(c>1);%linear for c>1 (this can happen)    dprime=c.^n;  %This is for when c is positive numberendf=fixed(2); %f controls ROC slope,  note that f=0 means sigma=1. if f==-1,sigma=1+params(nparams)*dprime;%float ROC slope param  elseif f>-1, sigma=1+f*dprime;%fix ROC slope param to equal fixed(2)  elseif f==-2,sigma=[1 params(nparams-nstim+2:nparams)]; %float each slopeendsigma=max(sigma,.3);sigma=min(sigma,2);     %place floor=.3 & ceiling=2 for sigma (these are arbitrary values)dprime;sigma;params;[e,prob,z_score]=expected2_17(params(1:nresp-1),dprime,sigma,1);%0 for d' vert interceptN_data=ones(nresp,1)*sum(data);      %number of trials per stimulusexpect=e.*N_data;			         %expected number of eventsdif= (expect- data)./sqrt(expect+eps);%the deviation (SE) units for leastsq%dif=(expect- data)./SD  %Var = Expect for binomial data (like Sakitt)